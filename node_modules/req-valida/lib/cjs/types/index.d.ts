import { Request, Response, NextFunction } from "express";
type validationObjectType = {
    location: "body" | "query" | "params";
    data: {
        [key: string]: {
            rules: [string, RegExp];
            isOptional?: boolean;
        };
    };
    isOptional?: boolean;
};
/**
 * Validate the request for expected data.
 * Passes the request to the next middleware if the validation passes or fails.
 * @param {object} validationObject - The object containing the validation rules.
 */
export declare function validate({ location, data, isOptional }: validationObjectType): (request: Request, _: Response, next: NextFunction) => Promise<void>;
declare const _default: {
    validate: typeof validate;
};
export default _default;
//# sourceMappingURL=index.d.ts.map